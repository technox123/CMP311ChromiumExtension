Create a database with 3 columns - password, email, version
As soon as chrome extension is loaded
Check for update
If wordlist is updated
Update the local wordlist
Else
Not update
Check cpu core count
Check the row length of wordlist
If the row length is not even
Do
Add 1 to row length
While (Row length is not even)
Create vector Wordlist[RowLength][2]
Populate vector with wordlist
Get user input
Validate user input
If input < 8 characters
Signal the user Password is un-secure
Else
Update the interface
If input doesn’t have upper-case and lowercase
Signal the user Password is un-secure
Else
Update the interface
If input doesn’t have special characters
Signal the user Password is un-secure
Else
Update the interface
If input doesn’t have numbers
Signal the user Password is un-secure
Check users password and email have not been compromised against the database
If has been found
Alert user that they have been compromised
Else
Password and email are secure
Update interface
Create threads (CPU Core count * 2)
Check number of threads is still even
Divide length of database by the number of threads
If the result has a decimal
Round up
For (i = 0: i < number of threads; i++) {
For (j = 0; j < division bit * i ; j++) {


Search the database for the compromised email or password
If password or email has been found
Signal the user that their password or email has been compromised
Else
Password is un-compromised


	


































Rowlength * 2
	12 * 2 = 24
20 / 8
	2.5 > 3
	
	3 * 8 = 24

For (i = 0; i < number of threads; i++) {
	For (j = 0; j < rowLength; j++) {
		For (h = 0; h < 2; h++) {

Length of rows / number of threads
	If decimal
		Round up
Vector[Length of Rows][2]
For (i = 0; i < Length of rows; i++) {
	For (j = 0; j < 2; j++) {



















































































